--- ./discord_94011/src/main/java/com/discord/stores/StoreApplicationCommands.java	2021-12-24 01:10:12.709023300 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreApplicationCommands.java	2021-12-24 01:08:33.204263500 +0400
@@ -34,24 +34,21 @@ import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Objects;
-import kotlin.Metadata;
 import kotlin.jvm.functions.Function0;
 import kotlin.jvm.functions.Function1;
 import kotlin.jvm.internal.DefaultConstructorMarker;
 import kotlin.jvm.internal.Ref$IntRef;
 import rx.Observable;
 
-@Metadata(bv = {1, 0, 3}, d1 = {"\u0000ø\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\t\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0010$\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u000f\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u000b\n\u0002\u0010!\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010%\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\r\n\u0002\u0018\u0002\n\u0002\b\b\u0018\u0000 \u00012\u00020\u0001:\u0002\u0001B]\u0012\b\u0010\u0001\u001a\u00030\u0001\u0012\u0006\u0010i\u001a\u00020h\u0012\u0006\u0010m\u001a\u00020l\u0012\u0006\u0010u\u001a\u00020t\u0012\b\u0010\u0001\u001a\u00030\u0001\u0012\b\b\u0002\u0010d\u001a\u00020c\u0012\b\b\u0002\u0010x\u001a\u00020w\u0012\b\b\u0002\u0010{\u001a\u00020z\u0012\b\b\u0002\u0010~\u001a\u00020}¢\u0006\u0006\b\u0001\u0010\u0001JE\u0010\u000b\u001a\u00020\n2\u000e\u0010\u0004\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00032\b\b\u0002\u0010\u0006\u001a\u00020\u00052\u0010\b\u0002\u0010\b\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00072\b\b\u0002\u0010\t\u001a\u00020\u0005H\u0002¢\u0006\u0004\b\u000b\u0010\fJ\u000f\u0010\u000e\u001a\u00020\rH\u0003¢\u0006\u0004\b\u000e\u0010\u000fJ\u001d\u0010\u0013\u001a\u00020\n2\f\u0010\u0012\u001a\b\u0012\u0004\u0012\u00020\u00110\u0010H\u0003¢\u0006\u0004\b\u0013\u0010\u0014J\u001d\u0010\u0016\u001a\u00020\n2\f\u0010\u0012\u001a\b\u0012\u0004\u0012\u00020\u00150\u0010H\u0003¢\u0006\u0004\b\u0016\u0010\u0014J\u001d\u0010\u0017\u001a\u00020\n2\f\u0010\u0012\u001a\b\u0012\u0004\u0012\u00020\u00150\u0010H\u0003¢\u0006\u0004\b\u0017\u0010\u0014J\u001b\u0010\u0018\u001a\u00020\n2\n\u0010\b\u001a\u00060\u0002j\u0002`\u0007H\u0002¢\u0006\u0004\b\u0018\u0010\u0019J\u001f\u0010\u001d\u001a\u00020\u001c2\u000e\u0010\u001b\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u001aH\u0002¢\u0006\u0004\b\u001d\u0010\u001eJ'\u0010#\u001a\u00020\n2\u0006\u0010\u001f\u001a\u00020\r2\u0006\u0010 \u001a\u00020\r2\u0006\u0010\"\u001a\u00020!H\u0003¢\u0006\u0004\b#\u0010$J\r\u0010&\u001a\u00020%¢\u0006\u0004\b&\u0010'J\u0013\u0010(\u001a\b\u0012\u0004\u0012\u00020\u00110\u0010¢\u0006\u0004\b(\u0010)J\u0019\u0010+\u001a\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020\u00110*¢\u0006\u0004\b+\u0010,J\u0013\u0010-\u001a\b\u0012\u0004\u0012\u00020\u00150\u0010¢\u0006\u0004\b-\u0010)J%\u0010.\u001a\u001a\u0012\u0004\u0012\u00020\r\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\r\u0012\u0004\u0012\u00020!0*0*¢\u0006\u0004\b.\u0010,J\u001f\u00102\u001a\b\u0012\u0004\u0012\u00020%012\n\u00100\u001a\u00060\u0002j\u0002`/¢\u0006\u0004\b2\u00103J%\u00104\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00150\u0010012\n\u00100\u001a\u00060\u0002j\u0002`/¢\u0006\u0004\b4\u00103J%\u00105\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00110\u0010012\n\u00100\u001a\u00060\u0002j\u0002`/¢\u0006\u0004\b5\u00103J+\u00106\u001a \u0012\u001c\u0012\u001a\u0012\u0004\u0012\u00020\r\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\r\u0012\u0004\u0012\u00020!0*0*01¢\u0006\u0004\b6\u00107J\u0015\u00109\u001a\u00020\n2\u0006\u00108\u001a\u00020\u001c¢\u0006\u0004\b9\u0010:J\r\u0010;\u001a\u00020\n¢\u0006\u0004\b;\u0010<J\r\u0010=\u001a\u00020\n¢\u0006\u0004\b=\u0010<J\u0019\u0010>\u001a\u00020\n2\n\u0010\b\u001a\u00060\u0002j\u0002`\u0007¢\u0006\u0004\b>\u0010\u0019J-\u0010?\u001a\u00020\n2\u000e\u0010\u0004\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00032\u000e\u0010\b\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u0007¢\u0006\u0004\b?\u0010@J\u0015\u0010C\u001a\u00020\n2\u0006\u0010B\u001a\u00020A¢\u0006\u0004\bC\u0010DJ\u001d\u0010E\u001a\u00020\n2\u000e\u0010\u0004\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u0003¢\u0006\u0004\bE\u0010FJ%\u0010H\u001a\u00020\n2\u000e\u0010\u0004\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00032\u0006\u0010G\u001a\u00020\r¢\u0006\u0004\bH\u0010IJ1\u0010L\u001a\u00020\n2\u000e\u0010\u0004\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00032\n\u00100\u001a\u00060\u0002j\u0002`/2\u0006\u0010K\u001a\u00020J¢\u0006\u0004\bL\u0010MJ\u0017\u0010P\u001a\u00020\n2\u0006\u0010O\u001a\u00020NH\u0007¢\u0006\u0004\bP\u0010QJ\r\u0010R\u001a\u00020\n¢\u0006\u0004\bR\u0010<J\r\u0010S\u001a\u00020\n¢\u0006\u0004\bS\u0010<J\u0017\u0010V\u001a\u00020\n2\u0006\u0010U\u001a\u00020TH\u0007¢\u0006\u0004\bV\u0010WJ\u000f\u0010X\u001a\u00020\nH\u0016¢\u0006\u0004\bX\u0010<J\u0019\u0010Y\u001a\u00020\u001c2\n\u0010\b\u001a\u00060\u0002j\u0002`\u0007¢\u0006\u0004\bY\u0010ZJ\u001f\u0010[\u001a\u00020\n2\u0006\u0010\u001f\u001a\u00020\r2\u0006\u0010 \u001a\u00020\rH\u0007¢\u0006\u0004\b[\u0010\\J\u001f\u0010]\u001a\u00020\n2\u0006\u0010\u001f\u001a\u00020\r2\u0006\u0010 \u001a\u00020\rH\u0007¢\u0006\u0004\b]\u0010\\R\u0018\u0010^\u001a\u0004\u0018\u00010\r8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b^\u0010_R\u001c\u0010a\u001a\b\u0012\u0004\u0012\u00020\u00150`8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\ba\u0010bR\u0016\u0010d\u001a\u00020c8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bd\u0010eR\u0016\u0010f\u001a\u00020\u001c8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\bf\u0010gR\u0016\u0010i\u001a\u00020h8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bi\u0010jR\u0018\u0010k\u001a\u0004\u0018\u00010\r8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\bk\u0010_R\u0016\u0010m\u001a\u00020l8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bm\u0010nR.\u0010p\u001a\u001a\u0012\u0004\u0012\u00020\r\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\r\u0012\u0004\u0012\u00020!0o0o8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\bp\u0010qR\u0016\u0010r\u001a\u00020%8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\br\u0010sR\u0016\u0010u\u001a\u00020t8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bu\u0010vR\u0016\u0010x\u001a\u00020w8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\bx\u0010yR\u0016\u0010{\u001a\u00020z8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b{\u0010|R\u0016\u0010~\u001a\u00020}8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b~\u0010R\u0018\u0010\u0001\u001a\u00020%8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010sR!\u0010\u0001\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00038\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R$\u0010\u0001\u001a\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020\u00110*8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010qR%\u0010\u0001\u001a\u000f\u0012\u0004\u0012\u00020\r\u0012\u0005\u0012\u00030\u00010o8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010qR\u0019\u0010\u0001\u001a\u00020\u00058\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u001e\u0010\u0001\u001a\b\u0012\u0004\u0012\u00020\u00110\u00108\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010bR!\u0010\u0001\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00038\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u001a\u0010\u0001\u001a\u00030\u00018\u0002@\u0002X\u0004¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u0019\u0010\u0001\u001a\u00020\u00058\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u0019\u0010\u0001\u001a\u00020\u00058\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u0019\u0010\u0001\u001a\u00020\u00058\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R0\u0010\u0001\u001a\u001a\u0012\u0004\u0012\u00020\r\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\r\u0012\u0004\u0012\u00020!0*0*8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010qR\u0018\u0010\u0001\u001a\u00020\u001c8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010gR\u0018\u0010\u0001\u001a\u00020\u001c8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010gR!\u0010\u0001\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00038\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u001e\u0010\u0001\u001a\b\u0012\u0004\u0012\u00020\u00110\u00108\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010bR\u001e\u0010\u0001\u001a\b\u0012\u0004\u0012\u00020\u00150\u00108\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010bR!\u0010\u0001\u001a\n\u0018\u00010\u0002j\u0004\u0018\u0001`\u00078\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u0018\u0010G\u001a\u0004\u0018\u00010\r8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\bG\u0010_R\u001a\u0010\u0001\u001a\u0004\u0018\u00010\r8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010_R\u001a\u0010\u0001\u001a\u00030\u00018\u0002@\u0002X\u0004¢\u0006\b\n\u0006\b\u0001\u0010\u0001R\u0016\u00108\u001a\u00020\u001c8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b8\u0010gR(\u0010\u0001\u001a\u0012\u0012\b\u0012\u00060\u0002j\u0002`\u0007\u0012\u0004\u0012\u00020\u00050o8\u0002@\u0002X\u000e¢\u0006\u0007\n\u0005\b\u0001\u0010qR\u001b\u0010\u0001\u001a\u0004\u0018\u00010\u00028\u0002@\u0002X\u000e¢\u0006\b\n\u0006\b\u0001\u0010\u0001¨\u0006 \u0001"}, d2 = {"Lcom/discord/stores/StoreApplicationCommands;", "Lcom/discord/stores/StoreV2;", "", "Lcom/discord/primitives/GuildId;", "guildId", "", "offset", "Lcom/discord/primitives/ApplicationId;", "applicationId", "limit", "", "requestApplicationCommands", "(Ljava/lang/Long;ILjava/lang/Long;I)V", "", "generateNonce", "()Ljava/lang/String;", "", "Lcom/discord/models/commands/Application;", "commands", "handleGuildApplicationsUpdate", "(Ljava/util/List;)V", "Lcom/discord/models/commands/ApplicationCommand;", "handleQueryCommandsUpdate", "handleDiscoverCommandsUpdate", "getApplicationCommandsViaRest", "(J)V", "Lcom/discord/api/permission/PermissionBit;", "channelPermissions", "", "shouldReturnApplicationCommands", "(Ljava/lang/Long;)Z", "commandOptionName", "queryString", "Lcom/discord/stores/CommandAutocompleteState;", "state", "setAutocompleteState", "(Ljava/lang/String;Ljava/lang/String;Lcom/discord/stores/CommandAutocompleteState;)V", "Lcom/discord/stores/DiscoverCommands;", "getDiscoverCommands", "()Lcom/discord/stores/DiscoverCommands;", "getApplications", "()Ljava/util/List;", "", "getApplicationMap", "()Ljava/util/Map;", "getQueryCommands", "getAutocompleteOptionResults", "Lcom/discord/primitives/ChannelId;", "channelId", "Lrx/Observable;", "observeDiscoverCommands", "(J)Lrx/Observable;", "observeQueryCommands", "observeGuildApplications", "observeAutocompleteResults", "()Lrx/Observable;", "connectionReady", "handleConnectionReady", "(Z)V", "requestLoadMoreUp", "()V", "requestLoadMoreDown", "requestDiscoverCommands", "requestInitialApplicationCommands", "(Ljava/lang/Long;Ljava/lang/Long;)V", "Lcom/discord/models/user/User;", "botUser", "handleDmUserApplication", "(Lcom/discord/models/user/User;)V", "requestApplications", "(Ljava/lang/Long;)V", "query", "requestApplicationCommandsQuery", "(Ljava/lang/Long;Ljava/lang/String;)V", "Lcom/discord/widgets/chat/input/models/ApplicationCommandData;", "data", "requestApplicationCommandAutocompleteData", "(Ljava/lang/Long;JLcom/discord/widgets/chat/input/models/ApplicationCommandData;)V", "Lcom/discord/api/commands/ApplicationCommandAutocompleteResult;", "autocompleteResult", "handleApplicationCommandAutocompleteResult", "(Lcom/discord/api/commands/ApplicationCommandAutocompleteResult;)V", "clearAutocompleteResults", "clearQueryCommands", "Lcom/discord/api/commands/GuildApplicationCommands;", "commandsGateway", "handleApplicationCommandsUpdate", "(Lcom/discord/api/commands/GuildApplicationCommands;)V", "snapshotData", "hasFetchedApplicationCommands", "(J)Z", "setAutocompleteLoading", "(Ljava/lang/String;Ljava/lang/String;)V", "setAutocompleteFailed", "queryNonce", "Ljava/lang/String;", "", "queryCommands", "Ljava/util/List;", "Lcom/discord/utilities/rest/RestAPI;", "restApi", "Lcom/discord/utilities/rest/RestAPI;", "loadDirectionUp", "Z", "Lcom/discord/stores/StorePermissions;", "storePermissions", "Lcom/discord/stores/StorePermissions;", "applicationNonce", "Lcom/discord/stores/StoreGuilds;", "storeGuilds", "Lcom/discord/stores/StoreGuilds;", "", "autocompleteOptionResults", "Ljava/util/Map;", "discoverCommandsSnapshot", "Lcom/discord/stores/DiscoverCommands;", "Lcom/discord/stores/StoreUser;", "storeUsers", "Lcom/discord/stores/StoreUser;", "Lcom/discord/stores/updates/ObservationDeck;", "observationDeck", "Lcom/discord/stores/updates/ObservationDeck;", "Lcom/discord/stores/BuiltInCommandsProvider;", "builtInCommandsProvider", "Lcom/discord/stores/BuiltInCommandsProvider;", "Lcom/discord/models/domain/NonceGenerator;", "nonceGenerator", "Lcom/discord/models/domain/NonceGenerator;", "discoverCommands", "queryGuildId", "Ljava/lang/Long;", "applicationsMapSnapshot", "Lcom/discord/stores/CommandOptionAutocompleteQuery;", "autocompleteNonceData", "currentEndOffset", "I", "applicationsSnapshot", "discoverGuildId", "Lcom/discord/stores/StoreGatewayConnection;", "storeGatewayConnection", "Lcom/discord/stores/StoreGatewayConnection;", "numRemoteCommands", "jumpedSequenceId", "currentStartOffset", "autocompleteOptionResultsSnapshot", "loadDirectionDown", "isLoadingDiscoveryCommands", "pendingGatewayGuildId", "applications", "queryCommandsSnapshot", "discoverApplicationId", "discoverCommandsNonce", "Lcom/discord/stores/Dispatcher;", "dispatcher", "Lcom/discord/stores/Dispatcher;", "applicationCommandIndexes", "jumpedApplicationId", "<init>", "(Lcom/discord/stores/StoreGatewayConnection;Lcom/discord/stores/StorePermissions;Lcom/discord/stores/StoreGuilds;Lcom/discord/stores/StoreUser;Lcom/discord/stores/Dispatcher;Lcom/discord/utilities/rest/RestAPI;Lcom/discord/stores/updates/ObservationDeck;Lcom/discord/stores/BuiltInCommandsProvider;Lcom/discord/models/domain/NonceGenerator;)V", "Companion", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
-/* compiled from: StoreApplicationCommands.kt */
 public final class StoreApplicationCommands extends StoreV2 {
     private static final ObservationDeck.UpdateSource AutocompleteResultsUpdate = new StoreApplicationCommands$Companion$AutocompleteResultsUpdate$1();
-    public static final int COMMANDS_LIMIT_PER_REQUEST = 20;
+    public static final int COMMANDS_LIMIT_PER_REQUEST;
     public static final Companion Companion = new Companion(null);
     private static final ObservationDeck.UpdateSource DiscoverCommandsUpdate = new StoreApplicationCommands$Companion$DiscoverCommandsUpdate$1();
     private static final ObservationDeck.UpdateSource GuildApplicationsUpdate = new StoreApplicationCommands$Companion$GuildApplicationsUpdate$1();
     private static final ObservationDeck.UpdateSource QueryCommandsUpdate = new StoreApplicationCommands$Companion$QueryCommandsUpdate$1();
-    public static final long TYPE_APPLICATION_COMMAND = 2;
-    public static final long TYPE_APPLICATION_COMMAND_AUTOCOMPLETE = 4;
+    public static final long TYPE_APPLICATION_COMMAND;
+    public static final long TYPE_APPLICATION_COMMAND_AUTOCOMPLETE;
     private Map<Long, Integer> applicationCommandIndexes;
     private String applicationNonce;
     private List<Application> applications;
@@ -90,8 +87,6 @@ public final class StoreApplicationComma
     private final StorePermissions storePermissions;
     private final StoreUser storeUsers;
 
-    @Metadata(bv = {1, 0, 3}, d1 = {"\u0000 \n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0002\b\n\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0010\t\n\u0002\b\u0006\b\u0003\u0018\u00002\u00020\u0001B\t\b\u0002¢\u0006\u0004\b\u0014\u0010\u0015R\u0019\u0010\u0003\u001a\u00020\u00028\u0006@\u0006¢\u0006\f\n\u0004\b\u0003\u0010\u0004\u001a\u0004\b\u0005\u0010\u0006R\u0019\u0010\u0007\u001a\u00020\u00028\u0006@\u0006¢\u0006\f\n\u0004\b\u0007\u0010\u0004\u001a\u0004\b\b\u0010\u0006R\u0019\u0010\t\u001a\u00020\u00028\u0006@\u0006¢\u0006\f\n\u0004\b\t\u0010\u0004\u001a\u0004\b\n\u0010\u0006R\u0019\u0010\u000b\u001a\u00020\u00028\u0006@\u0006¢\u0006\f\n\u0004\b\u000b\u0010\u0004\u001a\u0004\b\f\u0010\u0006R\u0016\u0010\u000e\u001a\u00020\r8\u0006@\u0006XT¢\u0006\u0006\n\u0004\b\u000e\u0010\u000fR\u0016\u0010\u0011\u001a\u00020\u00108\u0006@\u0006XT¢\u0006\u0006\n\u0004\b\u0011\u0010\u0012R\u0016\u0010\u0013\u001a\u00020\u00108\u0006@\u0006XT¢\u0006\u0006\n\u0004\b\u0013\u0010\u0012¨\u0006\u0016"}, d2 = {"Lcom/discord/stores/StoreApplicationCommands$Companion;", "", "Lcom/discord/stores/updates/ObservationDeck$UpdateSource;", "DiscoverCommandsUpdate", "Lcom/discord/stores/updates/ObservationDeck$UpdateSource;", "getDiscoverCommandsUpdate", "()Lcom/discord/stores/updates/ObservationDeck$UpdateSource;", "QueryCommandsUpdate", "getQueryCommandsUpdate", "GuildApplicationsUpdate", "getGuildApplicationsUpdate", "AutocompleteResultsUpdate", "getAutocompleteResultsUpdate", "", "COMMANDS_LIMIT_PER_REQUEST", "I", "", "TYPE_APPLICATION_COMMAND", "J", "TYPE_APPLICATION_COMMAND_AUTOCOMPLETE", "<init>", "()V", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
-    /* compiled from: StoreApplicationCommands.kt */
     public static final class Companion {
         private Companion() {
         }
@@ -122,19 +117,14 @@ public final class StoreApplicationComma
         this(storeGatewayConnection2, storePermissions2, storeGuilds2, storeUser, dispatcher2, (i & 32) != 0 ? RestAPI.Companion.getApi() : restAPI, (i & 64) != 0 ? ObservationDeckProvider.get() : observationDeck2, (i & 128) != 0 ? new BuiltInCommands() : builtInCommandsProvider2, (i & 256) != 0 ? new NonceGenerator() : nonceGenerator2);
     }
 
-    /* access modifiers changed from: private */
-    @StoreThread
     public final String generateNonce() {
         return String.valueOf(this.nonceGenerator.nonce());
     }
 
-    /* access modifiers changed from: private */
     public final void getApplicationCommandsViaRest(long j) {
         ObservableExtensionsKt.appSubscribe$default(ObservableExtensionsKt.restSubscribeOn$default(this.restApi.getApplicationCommands(j), false, 1, null), StoreApplicationCommands.class, (Context) null, (Function1) null, new StoreApplicationCommands$getApplicationCommandsViaRest$2(this), (Function0) null, (Function0) null, new StoreApplicationCommands$getApplicationCommandsViaRest$1(this, j), 54, (Object) null);
     }
 
-    /* access modifiers changed from: private */
-    @StoreThread
     public final void handleDiscoverCommandsUpdate(List<? extends ApplicationCommand> list) {
         LoadState loadState;
         this.isLoadingDiscoveryCommands = false;
@@ -195,8 +185,6 @@ public final class StoreApplicationComma
         markChanged(DiscoverCommandsUpdate);
     }
 
-    /* access modifiers changed from: private */
-    @StoreThread
     public final void handleGuildApplicationsUpdate(List<Application> list) {
         this.applications = list;
         this.numRemoteCommands = 0;
@@ -211,8 +199,6 @@ public final class StoreApplicationComma
         markChanged(GuildApplicationsUpdate);
     }
 
-    /* access modifiers changed from: private */
-    @StoreThread
     public final void handleQueryCommandsUpdate(List<? extends ApplicationCommand> list) {
         this.queryCommands.clear();
         this.queryCommands.addAll(list);
@@ -248,7 +234,6 @@ public final class StoreApplicationComma
         storeApplicationCommands.requestApplicationCommands(l, i, l2, i2);
     }
 
-    @StoreThread
     private final void setAutocompleteState(String str, String str2, CommandAutocompleteState commandAutocompleteState) {
         Map<String, CommandAutocompleteState> map = this.autocompleteOptionResults.get(str);
         if (map == null) {
@@ -267,7 +252,6 @@ public final class StoreApplicationComma
         }
     }
 
-    /* access modifiers changed from: private */
     public final boolean shouldReturnApplicationCommands(Long l) {
         Long l2 = this.discoverGuildId;
         return l2 == null || (l2 != null && l2.longValue() == 0) || PermissionUtils.can(2147483648L, l);
@@ -304,7 +288,6 @@ public final class StoreApplicationComma
         return this.queryCommandsSnapshot;
     }
 
-    @StoreThread
     public final void handleApplicationCommandAutocompleteResult(ApplicationCommandAutocompleteResult applicationCommandAutocompleteResult) {
         m.checkNotNullParameter(applicationCommandAutocompleteResult, "autocompleteResult");
         CommandOptionAutocompleteQuery commandOptionAutocompleteQuery = this.autocompleteNonceData.get(applicationCommandAutocompleteResult.b());
@@ -321,7 +304,6 @@ public final class StoreApplicationComma
         }
     }
 
-    @StoreThread
     public final void handleApplicationCommandsUpdate(GuildApplicationCommands guildApplicationCommands) {
         m.checkNotNullParameter(guildApplicationCommands, "commandsGateway");
         String c2 = guildApplicationCommands.c();
@@ -497,14 +479,12 @@ public final class StoreApplicationComma
         }
     }
 
-    @StoreThread
     public final void setAutocompleteFailed(String str, String str2) {
         m.checkNotNullParameter(str, "commandOptionName");
         m.checkNotNullParameter(str2, "queryString");
         setAutocompleteState(str, str2, CommandAutocompleteState.Failed.INSTANCE);
     }
 
-    @StoreThread
     public final void setAutocompleteLoading(String str, String str2) {
         m.checkNotNullParameter(str, "commandOptionName");
         m.checkNotNullParameter(str2, "queryString");
