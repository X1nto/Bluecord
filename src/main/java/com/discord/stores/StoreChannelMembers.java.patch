--- ./discord_94011/src/main/java/com/discord/stores/StoreChannelMembers.java	2021-12-24 01:10:12.748026100 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreChannelMembers.java	2021-12-24 01:08:33.245264000 +0400
@@ -296,6 +296,10 @@ public final class StoreChannelMembers e
         }, 62, (Object) null);
     }
 
+    public static final /* synthetic */ MemberListRow access$makeRowMember(StoreChannelMembers storeChannelMembers, long j, long j2, boolean z2) {
+        return storeChannelMembers.makeRowMember(j, j2, z2);
+    }
+
     private final boolean allowOwnerIndicator(long j) {
         Collection<GuildRole> values;
         boolean z2;
@@ -425,7 +429,7 @@ public final class StoreChannelMembers e
         throw new NoWhenBranchMatchedException();
     }
 
-    public final MemberListRow makeRowMember(long j, long j2, boolean z2) {
+    private final MemberListRow makeRowMember(long j, long j2, boolean z2) {
         Guild guild;
         return Companion.makeRowMember(j2, this.storeGuilds.getGuildMembersComputedInternal$app_productionGoogleRelease().get(Long.valueOf(j)), this.storeUser.getUsersInternal$app_productionGoogleRelease(), this.getPresence.invoke(Long.valueOf(j2)), this.isUserStreaming.invoke(Long.valueOf(j2)).booleanValue(), z2 && (guild = this.storeGuilds.getGuildsInternal$app_productionGoogleRelease().get(Long.valueOf(j))) != null && guild.getOwnerId() == j2);
     }
