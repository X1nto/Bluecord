--- ./discord_94011/src/main/java/com/discord/stores/StoreGuildVoiceRegions$fetchIfNonexisting$1.java	2021-12-24 01:10:12.846030000 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreGuildVoiceRegions$fetchIfNonexisting$1.java	2021-12-24 01:08:33.344261100 +0400
@@ -29,9 +29,9 @@ public final class StoreGuildVoiceRegion
 
     @Override // kotlin.jvm.functions.Function0
     public final void invoke() {
-        StoreGuildVoiceRegions.State state = (StoreGuildVoiceRegions.State) this.this$0.guildVoiceRegionsState.get(Long.valueOf(this.$guildId));
+        StoreGuildVoiceRegions.State state = (StoreGuildVoiceRegions.State) StoreGuildVoiceRegions.access$getGuildVoiceRegionsState$p(this.this$0).get(Long.valueOf(this.$guildId));
         if (!(state instanceof StoreGuildVoiceRegions.State.Loaded) && !(state instanceof StoreGuildVoiceRegions.State.Fetching)) {
-            this.this$0.handleGuildVoiceRegionsFetchStart(this.$guildId);
+            StoreGuildVoiceRegions.access$handleGuildVoiceRegionsFetchStart(this.this$0, this.$guildId);
             ObservableExtensionsKt.appSubscribe$default(ObservableExtensionsKt.restSubscribeOn(RestAPI.Companion.getApi().getGuildVoiceRegions(this.$guildId), false), this.this$0.getClass(), (Context) null, (Function1) null, new Function1<Error, Unit>(this) {
                 /* class com.discord.stores.StoreGuildVoiceRegions$fetchIfNonexisting$1.AnonymousClass2 */
                 public final /* synthetic */ StoreGuildVoiceRegions$fetchIfNonexisting$1 this$0;
@@ -50,7 +50,7 @@ public final class StoreGuildVoiceRegion
 
                 public final void invoke(Error error) {
                     m.checkNotNullParameter(error, "it");
-                    this.this$0.this$0.dispatcher.schedule(new Function0<Unit>(this) {
+                    StoreGuildVoiceRegions.access$getDispatcher$p(this.this$0.this$0).schedule(new Function0<Unit>(this) {
                         /* class com.discord.stores.StoreGuildVoiceRegions$fetchIfNonexisting$1.AnonymousClass2.AnonymousClass1 */
                         public final /* synthetic */ AnonymousClass2 this$0;
 
@@ -61,7 +61,7 @@ public final class StoreGuildVoiceRegion
                         @Override // kotlin.jvm.functions.Function0
                         public final void invoke() {
                             StoreGuildVoiceRegions$fetchIfNonexisting$1 storeGuildVoiceRegions$fetchIfNonexisting$1 = this.this$0.this$0;
-                            storeGuildVoiceRegions$fetchIfNonexisting$1.this$0.handleGuildVoiceRegionsFetchFailed(storeGuildVoiceRegions$fetchIfNonexisting$1.$guildId);
+                            StoreGuildVoiceRegions.access$handleGuildVoiceRegionsFetchFailed(storeGuildVoiceRegions$fetchIfNonexisting$1.this$0, storeGuildVoiceRegions$fetchIfNonexisting$1.$guildId);
                         }
                     });
                 }
@@ -83,7 +83,7 @@ public final class StoreGuildVoiceRegion
 
                 public final void invoke(final List<? extends ModelVoiceRegion> list) {
                     m.checkNotNullParameter(list, "voiceRegions");
-                    this.this$0.this$0.dispatcher.schedule(new Function0<Unit>(this) {
+                    StoreGuildVoiceRegions.access$getDispatcher$p(this.this$0.this$0).schedule(new Function0<Unit>(this) {
                         /* class com.discord.stores.StoreGuildVoiceRegions$fetchIfNonexisting$1.AnonymousClass1.AnonymousClass1 */
                         public final /* synthetic */ AnonymousClass1 this$0;
 
@@ -94,7 +94,7 @@ public final class StoreGuildVoiceRegion
                         @Override // kotlin.jvm.functions.Function0
                         public final void invoke() {
                             StoreGuildVoiceRegions$fetchIfNonexisting$1 storeGuildVoiceRegions$fetchIfNonexisting$1 = this.this$0.this$0;
-                            storeGuildVoiceRegions$fetchIfNonexisting$1.this$0.handleGuildVoiceRegions(storeGuildVoiceRegions$fetchIfNonexisting$1.$guildId, list);
+                            StoreGuildVoiceRegions.access$handleGuildVoiceRegions(storeGuildVoiceRegions$fetchIfNonexisting$1.this$0, storeGuildVoiceRegions$fetchIfNonexisting$1.$guildId, list);
                         }
                     });
                 }
