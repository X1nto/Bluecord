--- ./discord_94011/src/main/java/com/discord/stores/StoreApplicationCommands$requestApplicationCommandAutocompleteData$1.java	2021-12-24 01:10:12.714028600 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreApplicationCommands$requestApplicationCommandAutocompleteData$1.java	2021-12-24 01:08:33.208265100 +0400
@@ -39,10 +39,10 @@ public final class StoreApplicationComma
     @Override // kotlin.jvm.functions.Function0
     public final void invoke() {
         Object obj;
-        String access$generateNonce = StoreApplicationCommands.access$generateNonce(this.this$0);
+        String generateNonce = this.this$0.generateNonce();
         String version = this.$data.getApplicationCommand().getVersion();
         Long l = this.$guildId;
-        RestAPIParams.ApplicationCommand applicationCommand = new RestAPIParams.ApplicationCommand(4, String.valueOf(this.$channelId), String.valueOf(this.$data.getApplication().getId()), String.valueOf(this.$guildId), new com.discord.api.commands.ApplicationCommandData(version, l != null ? String.valueOf(l.longValue()) : null, this.$data.getApplicationCommand().getId(), this.$data.getApplicationCommand().getName(), ApplicationCommandLocalSendDataKt.toRestParams(this.$data.getValues())), access$generateNonce);
+        RestAPIParams.ApplicationCommand applicationCommand = new RestAPIParams.ApplicationCommand(4, String.valueOf(this.$channelId), String.valueOf(this.$data.getApplication().getId()), String.valueOf(this.$guildId), new com.discord.api.commands.ApplicationCommandData(version, l != null ? String.valueOf(l.longValue()) : null, this.$data.getApplicationCommand().getId(), this.$data.getApplicationCommand().getName(), ApplicationCommandLocalSendDataKt.toRestParams(this.$data.getValues())), generateNonce);
         List<ApplicationCommandValue> values = this.$data.getValues();
         ArrayList arrayList = new ArrayList();
         for (T t : values) {
@@ -67,8 +67,8 @@ public final class StoreApplicationComma
         }
         final ApplicationCommandValue applicationCommandValue = (ApplicationCommandValue) obj;
         if (applicationCommandValue != null) {
-            StoreApplicationCommands.access$getAutocompleteNonceData$p(this.this$0).put(access$generateNonce, new CommandOptionAutocompleteQuery(String.valueOf(applicationCommandValue.getValue()), applicationCommandValue.getName()));
-            ObservableExtensionsKt.appSubscribe$default(ObservableExtensionsKt.restSubscribeOn$default(StoreApplicationCommands.access$getRestApi$p(this.this$0).sendApplicationCommand(applicationCommand), false, 1, null), this.this$0.getClass(), (Context) null, (Function1) null, new Function1<Error, Unit>(this) {
+            this.this$0.autocompleteNonceData.put(generateNonce, new CommandOptionAutocompleteQuery(String.valueOf(applicationCommandValue.getValue()), applicationCommandValue.getName()));
+            ObservableExtensionsKt.appSubscribe$default(ObservableExtensionsKt.restSubscribeOn$default(this.this$0.restApi.sendApplicationCommand(applicationCommand), false, 1, null), this.this$0.getClass(), (Context) null, (Function1) null, new Function1<Error, Unit>(this) {
                 /* class com.discord.stores.StoreApplicationCommands$requestApplicationCommandAutocompleteData$1.AnonymousClass1 */
                 public final /* synthetic */ StoreApplicationCommands$requestApplicationCommandAutocompleteData$1 this$0;
 
@@ -86,7 +86,7 @@ public final class StoreApplicationComma
 
                 public final void invoke(Error error) {
                     m.checkNotNullParameter(error, "it");
-                    StoreApplicationCommands.access$getDispatcher$p(this.this$0.this$0).schedule(new Function0<Unit>(this) {
+                    this.this$0.this$0.dispatcher.schedule(new Function0<Unit>(this) {
                         /* class com.discord.stores.StoreApplicationCommands$requestApplicationCommandAutocompleteData$1.AnonymousClass1.AnonymousClass1 */
                         public final /* synthetic */ AnonymousClass1 this$0;
 
