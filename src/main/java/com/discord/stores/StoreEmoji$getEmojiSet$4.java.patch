--- ./discord_94011/src/main/java/com/discord/stores/StoreEmoji$getEmojiSet$4.java	2021-12-24 01:10:12.778023600 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreEmoji$getEmojiSet$4.java	2021-12-24 01:08:33.275262800 +0400
@@ -41,7 +41,7 @@ public final class StoreEmoji$getEmojiSe
         final Boolean component2 = quad.component2();
         final List list = (List) quad.component3();
         final Set set = (Set) quad.component4();
-        return ObservableExtensionsKt.computationLatest(StoreEmoji.access$getCustomEmojiStore$p(this.this$0).observeAllowedGuildEmoji()).F(new b<Map<Long, ? extends Map<Long, ? extends ModelEmojiCustom>>, EmojiSet>(this) {
+        return ObservableExtensionsKt.computationLatest(this.this$0.customEmojiStore.observeAllowedGuildEmoji()).F(new b<Map<Long, ? extends Map<Long, ? extends ModelEmojiCustom>>, EmojiSet>(this) {
             /* class com.discord.stores.StoreEmoji$getEmojiSet$4.AnonymousClass1 */
             public final /* synthetic */ StoreEmoji$getEmojiSet$4 this$0;
 
@@ -66,7 +66,7 @@ public final class StoreEmoji$getEmojiSe
                 boolean booleanValue2 = bool2.booleanValue();
                 Set set = set;
                 m.checkNotNullExpressionValue(set, "favorites");
-                return StoreEmoji.access$buildUsableEmojiSet(storeEmoji, map, emojiContext, list, booleanValue, z3, z2, booleanValue2, set);
+                return storeEmoji.buildUsableEmojiSet(map, emojiContext, list, booleanValue, z3, z2, booleanValue2, set);
             }
         });
     }
