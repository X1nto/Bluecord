--- ./discord_94011/src/main/java/com/discord/stores/StoreClientDataState.java	2021-12-24 01:10:12.761023800 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreClientDataState.java	2021-12-24 01:08:33.258261100 +0400
@@ -23,12 +23,9 @@ import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
-import kotlin.Metadata;
 import kotlin.jvm.internal.DefaultConstructorMarker;
 import rx.Observable;
 
-@Metadata(bv = {1, 0, 3}, d1 = {"\u0000\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\t\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0010%\n\u0002\b\u0006\u0018\u00002\u00020\u0001:\u0001DB\u0011\u0012\b\b\u0002\u00106\u001a\u000205¢\u0006\u0004\bB\u0010CJ\u0017\u0010\u0005\u001a\u00020\u00042\u0006\u0010\u0003\u001a\u00020\u0002H\u0003¢\u0006\u0004\b\u0005\u0010\u0006J\u001b\u0010\n\u001a\u00020\u00042\n\u0010\t\u001a\u00060\u0007j\u0002`\bH\u0003¢\u0006\u0004\b\n\u0010\u000bJ\u0013\u0010\u000e\u001a\b\u0012\u0004\u0012\u00020\r0\f¢\u0006\u0004\b\u000e\u0010\u000fJ\u000f\u0010\u0010\u001a\u00020\u0004H\u0007¢\u0006\u0004\b\u0010\u0010\u0011J\u0017\u0010\u0014\u001a\u00020\u00042\u0006\u0010\u0013\u001a\u00020\u0012H\u0007¢\u0006\u0004\b\u0014\u0010\u0015J\u0017\u0010\u0016\u001a\u00020\u00042\u0006\u0010\u0003\u001a\u00020\u0002H\u0007¢\u0006\u0004\b\u0016\u0010\u0006J\u0017\u0010\u0017\u001a\u00020\u00042\u0006\u0010\u0003\u001a\u00020\u0002H\u0007¢\u0006\u0004\b\u0017\u0010\u0006J\u0017\u0010\u001a\u001a\u00020\u00042\u0006\u0010\u0019\u001a\u00020\u0018H\u0007¢\u0006\u0004\b\u001a\u0010\u001bJ%\u0010 \u001a\u00020\u00042\n\u0010\u001d\u001a\u00060\u0007j\u0002`\u001c2\b\u0010\u001f\u001a\u0004\u0018\u00010\u001eH\u0007¢\u0006\u0004\b \u0010!J\u0017\u0010#\u001a\u00020\u00042\u0006\u0010\u0013\u001a\u00020\"H\u0007¢\u0006\u0004\b#\u0010$J\u0017\u0010&\u001a\u00020\u00042\u0006\u0010\u0013\u001a\u00020%H\u0007¢\u0006\u0004\b&\u0010'J\u0017\u0010*\u001a\u00020\u00042\u0006\u0010)\u001a\u00020(H\u0007¢\u0006\u0004\b*\u0010+J\u0017\u0010.\u001a\u00020\u00042\u0006\u0010-\u001a\u00020,H\u0007¢\u0006\u0004\b.\u0010/J\u0017\u00102\u001a\u00020\u00042\u0006\u00101\u001a\u000200H\u0007¢\u0006\u0004\b2\u00103J\u000f\u00104\u001a\u00020\u0004H\u0016¢\u0006\u0004\b4\u0010\u0011R\u0016\u00106\u001a\u0002058\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b6\u00107R\u001a\u00108\u001a\u00060\u0007j\u0002`\b8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b8\u00109R\u0016\u0010:\u001a\u00020\r8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b:\u0010;R\u0016\u0010=\u001a\u00020<8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b=\u0010>R&\u0010\u001f\u001a\u0012\u0012\b\u0012\u00060\u0007j\u0002`\u001c\u0012\u0004\u0012\u00020\u001e0?8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b\u001f\u0010@R\u0016\u0010A\u001a\u00020<8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\bA\u0010>¨\u0006E"}, d2 = {"Lcom/discord/stores/StoreClientDataState;", "Lcom/discord/stores/StoreV2;", "Lcom/discord/api/guild/Guild;", "guild", "", "updateGuildHash", "(Lcom/discord/api/guild/Guild;)V", "", "Lcom/discord/primitives/MessageId;", "newMessageId", "updateHighestLastMessageId", "(J)V", "Lrx/Observable;", "Lcom/discord/stores/StoreClientDataState$ClientDataState;", "observeClientState", "()Lrx/Observable;", "clear", "()V", "Lcom/discord/models/domain/ModelPayload;", "payload", "handleConnectionOpen", "(Lcom/discord/models/domain/ModelPayload;)V", "handleGuildAdd", "handleGuildRemove", "Lcom/discord/api/channel/Channel;", "channel", "handleChannelCreateOrUpdateOrDelete", "(Lcom/discord/api/channel/Channel;)V", "Lcom/discord/primitives/GuildId;", "guildId", "Lcom/discord/api/guildhash/GuildHashes;", "guildHashes", "handleRoleAddOrRemove", "(JLcom/discord/api/guildhash/GuildHashes;)V", "Lcom/discord/api/emoji/GuildEmojisUpdate;", "handleEmojiUpdate", "(Lcom/discord/api/emoji/GuildEmojisUpdate;)V", "Lcom/discord/api/sticker/GuildStickersUpdate;", "handleStickersUpdate", "(Lcom/discord/api/sticker/GuildStickersUpdate;)V", "Lcom/discord/api/message/Message;", "message", "handleMessageCreate", "(Lcom/discord/api/message/Message;)V", "Lcom/discord/models/domain/ModelReadState;", "readState", "handleMessageAck", "(Lcom/discord/models/domain/ModelReadState;)V", "Lcom/discord/models/domain/ModelNotificationSettings;", "userGuildSettings", "handleGuildSettingUpdated", "(Lcom/discord/models/domain/ModelNotificationSettings;)V", "snapshotData", "Lcom/discord/stores/updates/ObservationDeck;", "observationDeck", "Lcom/discord/stores/updates/ObservationDeck;", "highestLastMessageId", "J", "clientDataStateSnapshot", "Lcom/discord/stores/StoreClientDataState$ClientDataState;", "", "readStateVersion", "I", "", "Ljava/util/Map;", "userGuildSettingsVersion", "<init>", "(Lcom/discord/stores/updates/ObservationDeck;)V", "ClientDataState", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
-/* compiled from: StoreClientDataState.kt */
 public final class StoreClientDataState extends StoreV2 {
     private ClientDataState clientDataStateSnapshot;
     private Map<Long, GuildHashes> guildHashes;
@@ -37,8 +34,6 @@ public final class StoreClientDataState
     private int readStateVersion;
     private int userGuildSettingsVersion;
 
-    @Metadata(bv = {1, 0, 3}, d1 = {"\u0000H\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0002\u0010\u0011\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010$\n\u0002\u0010\t\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\r\n\u0002\u0010\u000b\n\u0002\b\f\b\b\u0018\u00002\u00020\u0001BC\u0012\u0018\b\u0002\u0010\u0016\u001a\u0012\u0012\b\u0012\u00060\u000bj\u0002`\f\u0012\u0004\u0012\u00020\u00020\n\u0012\f\b\u0002\u0010\u0017\u001a\u00060\u000bj\u0002`\u000f\u0012\b\b\u0002\u0010\u0018\u001a\u00020\u0012\u0012\b\b\u0002\u0010\u0019\u001a\u00020\u0012¢\u0006\u0004\b*\u0010+J\u001b\u0010\u0005\u001a\n\u0012\u0004\u0012\u00020\u0004\u0018\u00010\u0003*\u00020\u0002H\u0002¢\u0006\u0004\b\u0005\u0010\u0006J\r\u0010\b\u001a\u00020\u0007¢\u0006\u0004\b\b\u0010\tJ \u0010\r\u001a\u0012\u0012\b\u0012\u00060\u000bj\u0002`\f\u0012\u0004\u0012\u00020\u00020\nHÆ\u0003¢\u0006\u0004\b\r\u0010\u000eJ\u0014\u0010\u0010\u001a\u00060\u000bj\u0002`\u000fHÆ\u0003¢\u0006\u0004\b\u0010\u0010\u0011J\u0010\u0010\u0013\u001a\u00020\u0012HÆ\u0003¢\u0006\u0004\b\u0013\u0010\u0014J\u0010\u0010\u0015\u001a\u00020\u0012HÆ\u0003¢\u0006\u0004\b\u0015\u0010\u0014JL\u0010\u001a\u001a\u00020\u00002\u0018\b\u0002\u0010\u0016\u001a\u0012\u0012\b\u0012\u00060\u000bj\u0002`\f\u0012\u0004\u0012\u00020\u00020\n2\f\b\u0002\u0010\u0017\u001a\u00060\u000bj\u0002`\u000f2\b\b\u0002\u0010\u0018\u001a\u00020\u00122\b\b\u0002\u0010\u0019\u001a\u00020\u0012HÆ\u0001¢\u0006\u0004\b\u001a\u0010\u001bJ\u0010\u0010\u001c\u001a\u00020\u0004HÖ\u0001¢\u0006\u0004\b\u001c\u0010\u001dJ\u0010\u0010\u001e\u001a\u00020\u0012HÖ\u0001¢\u0006\u0004\b\u001e\u0010\u0014J\u001a\u0010!\u001a\u00020 2\b\u0010\u001f\u001a\u0004\u0018\u00010\u0001HÖ\u0003¢\u0006\u0004\b!\u0010\"R\u0019\u0010\u0018\u001a\u00020\u00128\u0006@\u0006¢\u0006\f\n\u0004\b\u0018\u0010#\u001a\u0004\b$\u0010\u0014R)\u0010\u0016\u001a\u0012\u0012\b\u0012\u00060\u000bj\u0002`\f\u0012\u0004\u0012\u00020\u00020\n8\u0006@\u0006¢\u0006\f\n\u0004\b\u0016\u0010%\u001a\u0004\b&\u0010\u000eR\u001d\u0010\u0017\u001a\u00060\u000bj\u0002`\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u0017\u0010'\u001a\u0004\b(\u0010\u0011R\u0019\u0010\u0019\u001a\u00020\u00128\u0006@\u0006¢\u0006\f\n\u0004\b\u0019\u0010#\u001a\u0004\b)\u0010\u0014¨\u0006,"}, d2 = {"Lcom/discord/stores/StoreClientDataState$ClientDataState;", "", "Lcom/discord/api/guildhash/GuildHashes;", "", "", "toArray", "(Lcom/discord/api/guildhash/GuildHashes;)[Ljava/lang/String;", "Lcom/discord/gateway/io/OutgoingPayload$IdentifyClientState;", "toIdentifyData", "()Lcom/discord/gateway/io/OutgoingPayload$IdentifyClientState;", "", "", "Lcom/discord/primitives/GuildId;", "component1", "()Ljava/util/Map;", "Lcom/discord/primitives/MessageId;", "component2", "()J", "", "component3", "()I", "component4", "guildHashes", "highestLastMessageId", "readStateVersion", "userGuildSettingsVersion", "copy", "(Ljava/util/Map;JII)Lcom/discord/stores/StoreClientDataState$ClientDataState;", "toString", "()Ljava/lang/String;", "hashCode", "other", "", "equals", "(Ljava/lang/Object;)Z", "I", "getReadStateVersion", "Ljava/util/Map;", "getGuildHashes", "J", "getHighestLastMessageId", "getUserGuildSettingsVersion", "<init>", "(Ljava/util/Map;JII)V", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
-    /* compiled from: StoreClientDataState.kt */
     public static final class ClientDataState {
         private final Map<Long, GuildHashes> guildHashes;
         private final long highestLastMessageId;
@@ -189,7 +184,6 @@ public final class StoreClientDataState
         this((i & 1) != 0 ? ObservationDeckProvider.get() : observationDeck2);
     }
 
-    @StoreThread
     private final void updateGuildHash(Guild guild) {
         GuildHashes m;
         if (guild.M() || (m = guild.m()) == null || !GuildHashUtilsKt.isSupported(m)) {
@@ -203,14 +197,12 @@ public final class StoreClientDataState
         map.put(valueOf, m2);
     }
 
-    @StoreThread
     private final void updateHighestLastMessageId(long j) {
         if (j > this.highestLastMessageId) {
             this.highestLastMessageId = j;
         }
     }
 
-    @StoreThread
     public final void clear() {
         this.guildHashes.clear();
         this.highestLastMessageId = 0;
@@ -219,7 +211,6 @@ public final class StoreClientDataState
         markChanged();
     }
 
-    @StoreThread
     public final void handleChannelCreateOrUpdateOrDelete(Channel channel) {
         m.checkNotNullParameter(channel, "channel");
         GuildHashes e = channel.e();
@@ -233,7 +224,6 @@ public final class StoreClientDataState
         }
     }
 
-    @StoreThread
     public final void handleConnectionOpen(ModelPayload modelPayload) {
         m.checkNotNullParameter(modelPayload, "payload");
         clear();
@@ -260,7 +250,6 @@ public final class StoreClientDataState
         markChanged();
     }
 
-    @StoreThread
     public final void handleEmojiUpdate(GuildEmojisUpdate guildEmojisUpdate) {
         m.checkNotNullParameter(guildEmojisUpdate, "payload");
         if (GuildHashUtilsKt.isSupported(guildEmojisUpdate.b())) {
@@ -269,21 +258,18 @@ public final class StoreClientDataState
         }
     }
 
-    @StoreThread
     public final void handleGuildAdd(Guild guild) {
         m.checkNotNullParameter(guild, "guild");
         updateGuildHash(guild);
         markChanged();
     }
 
-    @StoreThread
     public final void handleGuildRemove(Guild guild) {
         m.checkNotNullParameter(guild, "guild");
         this.guildHashes.remove(Long.valueOf(guild.p()));
         markChanged();
     }
 
-    @StoreThread
     public final void handleGuildSettingUpdated(ModelNotificationSettings modelNotificationSettings) {
         m.checkNotNullParameter(modelNotificationSettings, "userGuildSettings");
         if (modelNotificationSettings.getVersion() > this.userGuildSettingsVersion) {
@@ -292,7 +278,6 @@ public final class StoreClientDataState
         }
     }
 
-    @StoreThread
     public final void handleMessageAck(ModelReadState modelReadState) {
         m.checkNotNullParameter(modelReadState, "readState");
         if (modelReadState.getVersion() > this.readStateVersion) {
@@ -301,14 +286,12 @@ public final class StoreClientDataState
         }
     }
 
-    @StoreThread
     public final void handleMessageCreate(Message message) {
         m.checkNotNullParameter(message, "message");
         updateHighestLastMessageId(message.o());
         markChanged();
     }
 
-    @StoreThread
     public final void handleRoleAddOrRemove(long j, GuildHashes guildHashes2) {
         if (guildHashes2 != null && GuildHashUtilsKt.isSupported(guildHashes2)) {
             this.guildHashes.put(Long.valueOf(j), guildHashes2);
@@ -316,7 +299,6 @@ public final class StoreClientDataState
         }
     }
 
-    @StoreThread
     public final void handleStickersUpdate(GuildStickersUpdate guildStickersUpdate) {
         m.checkNotNullParameter(guildStickersUpdate, "payload");
         if (GuildHashUtilsKt.isSupported(guildStickersUpdate.a())) {
