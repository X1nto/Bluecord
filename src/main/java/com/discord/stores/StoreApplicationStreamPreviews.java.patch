--- ./discord_94011/src/main/java/com/discord/stores/StoreApplicationStreamPreviews.java	2021-12-24 01:10:12.720026000 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreApplicationStreamPreviews.java	2021-12-24 01:08:33.215263100 +0400
@@ -15,6 +15,7 @@ import d0.z.d.m;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.TimeUnit;
+import kotlin.Metadata;
 import kotlin.jvm.functions.Function0;
 import kotlin.jvm.functions.Function1;
 import kotlin.jvm.internal.DefaultConstructorMarker;
@@ -22,9 +23,12 @@ import retrofit2.HttpException;
 import rx.Observable;
 import rx.Subscription;
 
+@Metadata(bv = {1, 0, 3}, d1 = {"\u0000\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u000e\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010$\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\u0010\b\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010%\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0007\u0018\u0000 ;2\u00020\u0001:\u0002;<B+\u0012\u0006\u00104\u001a\u000203\u0012\u0006\u00101\u001a\u000200\u0012\b\b\u0002\u00107\u001a\u000206\u0012\b\b\u0002\u0010,\u001a\u00020+¢\u0006\u0004\b9\u0010:J\u001b\u0010\u0006\u001a\u00020\u00052\n\u0010\u0004\u001a\u00060\u0002j\u0002`\u0003H\u0003¢\u0006\u0004\b\u0006\u0010\u0007J%\u0010\u0006\u001a\u00020\u00052\b\u0010\t\u001a\u0004\u0018\u00010\b2\n\u0010\u0004\u001a\u00060\u0002j\u0002`\u0003H\u0002¢\u0006\u0004\b\u0006\u0010\nJ\u001b\u0010\u000b\u001a\u00020\u00052\n\u0010\u0004\u001a\u00060\u0002j\u0002`\u0003H\u0002¢\u0006\u0004\b\u000b\u0010\u0007J\u001d\u0010\r\u001a\u0012\u0012\b\u0012\u00060\u0002j\u0002`\u0003\u0012\u0004\u0012\u00020\b0\f¢\u0006\u0004\b\r\u0010\u000eJ\u001d\u0010\u0012\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\b0\u00112\u0006\u0010\u0010\u001a\u00020\u000f¢\u0006\u0004\b\u0012\u0010\u0013J!\u0010\u0012\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\b0\u00112\n\u0010\u0004\u001a\u00060\u0002j\u0002`\u0003¢\u0006\u0004\b\u0012\u0010\u0014J\u001b\u0010\u0015\u001a\u00020\u00052\n\u0010\u0004\u001a\u00060\u0002j\u0002`\u0003H\u0007¢\u0006\u0004\b\u0015\u0010\u0007J#\u0010\u0017\u001a\u00020\u00052\n\u0010\u0004\u001a\u00060\u0002j\u0002`\u00032\u0006\u0010\u0016\u001a\u00020\u0002H\u0007¢\u0006\u0004\b\u0017\u0010\u0018J#\u0010\u001b\u001a\u00020\u00052\n\u0010\u0004\u001a\u00060\u0002j\u0002`\u00032\u0006\u0010\u001a\u001a\u00020\u0019H\u0007¢\u0006\u0004\b\u001b\u0010\u001cJ\u000f\u0010\u001d\u001a\u00020\u0005H\u0017¢\u0006\u0004\b\u001d\u0010\u001eJ\u0015\u0010\u0006\u001a\u00020\u00052\u0006\u0010 \u001a\u00020\u001f¢\u0006\u0004\b\u0006\u0010!R&\u0010\"\u001a\u0012\u0012\b\u0012\u00060\u0002j\u0002`\u0003\u0012\u0004\u0012\u00020\b0\f8\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b\"\u0010#R:\u0010'\u001a&\u0012\b\u0012\u00060\u0002j\u0002`\u0003\u0012\u0004\u0012\u00020%0$j\u0012\u0012\b\u0012\u00060\u0002j\u0002`\u0003\u0012\u0004\u0012\u00020%`&8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b'\u0010(R&\u0010*\u001a\u0012\u0012\b\u0012\u00060\u0002j\u0002`\u0003\u0012\u0004\u0012\u00020\b0)8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b*\u0010#R\u0016\u0010,\u001a\u00020+8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b,\u0010-R:\u0010/\u001a&\u0012\b\u0012\u00060\u0002j\u0002`\u0003\u0012\u0004\u0012\u00020.0$j\u0012\u0012\b\u0012\u00060\u0002j\u0002`\u0003\u0012\u0004\u0012\u00020.`&8\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b/\u0010(R\u0016\u00101\u001a\u0002008\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b1\u00102R\u0016\u00104\u001a\u0002038\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b4\u00105R\u0016\u00107\u001a\u0002068\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b7\u00108¨\u0006="}, d2 = {"Lcom/discord/stores/StoreApplicationStreamPreviews;", "Lcom/discord/stores/StoreV2;", "", "Lcom/discord/primitives/StreamKey;", "streamKey", "", "fetchStreamPreviewIfNotFetching", "(Ljava/lang/String;)V", "Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview;", "preview", "(Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview;Ljava/lang/String;)V", "fetchStreamPreview", "", "getStreamKeyToPreviewMap", "()Ljava/util/Map;", "Lcom/discord/models/domain/ModelApplicationStream;", "applicationStream", "Lrx/Observable;", "observeStreamPreview", "(Lcom/discord/models/domain/ModelApplicationStream;)Lrx/Observable;", "(Ljava/lang/String;)Lrx/Observable;", "handleFetchStart", "url", "handleFetchSuccess", "(Ljava/lang/String;Ljava/lang/String;)V", "Lcom/discord/utilities/error/Error;", "error", "handleFetchFailed", "(Ljava/lang/String;Lcom/discord/utilities/error/Error;)V", "snapshotData", "()V", "Lcom/discord/utilities/streams/StreamContext;", "streamContext", "(Lcom/discord/utilities/streams/StreamContext;)V", "streamKeyToPreviewMapSnapshot", "Ljava/util/Map;", "Ljava/util/HashMap;", "", "Lkotlin/collections/HashMap;", "fetchAttempts", "Ljava/util/HashMap;", "", "streamKeyToPreviewMap", "Lcom/discord/stores/updates/ObservationDeck;", "observationDeck", "Lcom/discord/stores/updates/ObservationDeck;", "Lrx/Subscription;", "fetchStreamPreviewSubscriptions", "Lcom/discord/utilities/time/Clock;", "clock", "Lcom/discord/utilities/time/Clock;", "Lcom/discord/stores/Dispatcher;", "dispatcher", "Lcom/discord/stores/Dispatcher;", "Lcom/discord/utilities/rest/RestAPI;", "restAPI", "Lcom/discord/utilities/rest/RestAPI;", "<init>", "(Lcom/discord/stores/Dispatcher;Lcom/discord/utilities/time/Clock;Lcom/discord/utilities/rest/RestAPI;Lcom/discord/stores/updates/ObservationDeck;)V", "Companion", "StreamPreview", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
+/* compiled from: StoreApplicationStreamPreviews.kt */
 public final class StoreApplicationStreamPreviews extends StoreV2 {
     private static final Companion Companion = new Companion(null);
-    private static final long READ_PREVIEW_DEFAULT_RETRY_DELAY_MS;
+    @Deprecated
+    private static final long READ_PREVIEW_DEFAULT_RETRY_DELAY_MS = 10000;
     private final Clock clock;
     private final Dispatcher dispatcher;
     private final HashMap<String, Integer> fetchAttempts;
@@ -34,6 +38,8 @@ public final class StoreApplicationStrea
     private final Map<String, StreamPreview> streamKeyToPreviewMap;
     private Map<String, ? extends StreamPreview> streamKeyToPreviewMapSnapshot;
 
+    @Metadata(bv = {1, 0, 3}, d1 = {"\u0000\u0010\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0010\t\n\u0002\b\u0005\b\u0003\u0018\u00002\u00020\u0001B\t\b\u0002¢\u0006\u0004\b\u0005\u0010\u0006R\u0016\u0010\u0003\u001a\u00020\u00028\u0002@\u0002XT¢\u0006\u0006\n\u0004\b\u0003\u0010\u0004¨\u0006\u0007"}, d2 = {"Lcom/discord/stores/StoreApplicationStreamPreviews$Companion;", "", "", "READ_PREVIEW_DEFAULT_RETRY_DELAY_MS", "J", "<init>", "()V", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
+    /* compiled from: StoreApplicationStreamPreviews.kt */
     public static final class Companion {
         private Companion() {
         }
@@ -43,8 +49,12 @@ public final class StoreApplicationStrea
         }
     }
 
+    @Metadata(bv = {1, 0, 3}, d1 = {"\u0000\u0016\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\b6\u0018\u00002\u00020\u0001:\u0002\u0004\u0005B\t\b\u0002¢\u0006\u0004\b\u0002\u0010\u0003\u0001\u0002\u0006\u0007¨\u0006\b"}, d2 = {"Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview;", "", "<init>", "()V", "Fetching", "Resolved", "Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview$Resolved;", "Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview$Fetching;", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
+    /* compiled from: StoreApplicationStreamPreviews.kt */
     public static abstract class StreamPreview {
 
+        @Metadata(bv = {1, 0, 3}, d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\bÆ\u0002\u0018\u00002\u00020\u0001B\t\b\u0002¢\u0006\u0004\b\u0002\u0010\u0003¨\u0006\u0004"}, d2 = {"Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview$Fetching;", "Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview;", "<init>", "()V", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
+        /* compiled from: StoreApplicationStreamPreviews.kt */
         public static final class Fetching extends StreamPreview {
             public static final Fetching INSTANCE = new Fetching();
 
@@ -53,6 +63,8 @@ public final class StoreApplicationStrea
             }
         }
 
+        @Metadata(bv = {1, 0, 3}, d1 = {"\u0000&\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u000e\n\u0002\b\u0006\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0007\b\b\u0018\u00002\u00020\u0001B\u0011\u0012\b\u0010\u0005\u001a\u0004\u0018\u00010\u0002¢\u0006\u0004\b\u0013\u0010\u0014J\u0012\u0010\u0003\u001a\u0004\u0018\u00010\u0002HÆ\u0003¢\u0006\u0004\b\u0003\u0010\u0004J\u001c\u0010\u0006\u001a\u00020\u00002\n\b\u0002\u0010\u0005\u001a\u0004\u0018\u00010\u0002HÆ\u0001¢\u0006\u0004\b\u0006\u0010\u0007J\u0010\u0010\b\u001a\u00020\u0002HÖ\u0001¢\u0006\u0004\b\b\u0010\u0004J\u0010\u0010\n\u001a\u00020\tHÖ\u0001¢\u0006\u0004\b\n\u0010\u000bJ\u001a\u0010\u000f\u001a\u00020\u000e2\b\u0010\r\u001a\u0004\u0018\u00010\fHÖ\u0003¢\u0006\u0004\b\u000f\u0010\u0010R\u001b\u0010\u0005\u001a\u0004\u0018\u00010\u00028\u0006@\u0006¢\u0006\f\n\u0004\b\u0005\u0010\u0011\u001a\u0004\b\u0012\u0010\u0004¨\u0006\u0015"}, d2 = {"Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview$Resolved;", "Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview;", "", "component1", "()Ljava/lang/String;", "url", "copy", "(Ljava/lang/String;)Lcom/discord/stores/StoreApplicationStreamPreviews$StreamPreview$Resolved;", "toString", "", "hashCode", "()I", "", "other", "", "equals", "(Ljava/lang/Object;)Z", "Ljava/lang/String;", "getUrl", "<init>", "(Ljava/lang/String;)V", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
+        /* compiled from: StoreApplicationStreamPreviews.kt */
         public static final class Resolved extends StreamPreview {
             private final String url;
 
@@ -132,6 +144,7 @@ public final class StoreApplicationStrea
         return this.streamKeyToPreviewMapSnapshot;
     }
 
+    @StoreThread
     public final void handleFetchFailed(String str, Error error) {
         m.checkNotNullParameter(str, "streamKey");
         m.checkNotNullParameter(error, "error");
@@ -176,12 +189,14 @@ public final class StoreApplicationStrea
         markChanged();
     }
 
+    @StoreThread
     public final void handleFetchStart(String str) {
         m.checkNotNullParameter(str, "streamKey");
         this.streamKeyToPreviewMap.put(str, StreamPreview.Fetching.INSTANCE);
         markChanged();
     }
 
+    @StoreThread
     public final void handleFetchSuccess(String str, String str2) {
         m.checkNotNullParameter(str, "streamKey");
         m.checkNotNullParameter(str2, "url");
@@ -196,6 +211,7 @@ public final class StoreApplicationStrea
     }
 
     @Override // com.discord.stores.StoreV2
+    @StoreThread
     public void snapshotData() {
         super.snapshotData();
         this.streamKeyToPreviewMapSnapshot = new HashMap(this.streamKeyToPreviewMap);
@@ -223,6 +239,8 @@ public final class StoreApplicationStrea
         this.fetchStreamPreviewSubscriptions = new HashMap<>();
     }
 
+    /* access modifiers changed from: private */
+    @StoreThread
     public final void fetchStreamPreviewIfNotFetching(String str) {
         fetchStreamPreviewIfNotFetching(this.streamKeyToPreviewMap.get(str), str);
     }
