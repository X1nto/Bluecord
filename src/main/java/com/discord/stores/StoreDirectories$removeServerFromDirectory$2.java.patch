--- ./discord_94011/src/main/java/com/discord/stores/StoreDirectories$removeServerFromDirectory$2.java	2021-12-24 01:10:12.772025400 +0400
+++ ./bluecord/src/main/java/com/discord/stores/StoreDirectories$removeServerFromDirectory$2.java	2021-12-24 01:08:33.269263300 +0400
@@ -40,7 +40,7 @@ public final class StoreDirectories$remo
     public final void invoke(RestCallState<DirectoryEntry> restCallState) {
         m.checkNotNullParameter(restCallState, "request");
         if (restCallState instanceof Success) {
-            this.this$0.dispatcher.schedule(new Function0<Unit>(this) {
+            StoreDirectories.access$getDispatcher$p(this.this$0).schedule(new Function0<Unit>(this) {
                 /* class com.discord.stores.StoreDirectories$removeServerFromDirectory$2.AnonymousClass1 */
                 public final /* synthetic */ StoreDirectories$removeServerFromDirectory$2 this$0;
 
@@ -50,9 +50,9 @@ public final class StoreDirectories$remo
 
                 @Override // kotlin.jvm.functions.Function0
                 public final void invoke() {
-                    Map map = this.this$0.this$0.directoriesMap;
+                    Map access$getDirectoriesMap$p = StoreDirectories.access$getDirectoriesMap$p(this.this$0.this$0);
                     Long valueOf = Long.valueOf(this.this$0.$channelId);
-                    RestCallState restCallState = (RestCallState) this.this$0.this$0.directoriesMap.get(Long.valueOf(this.this$0.$channelId));
+                    RestCallState restCallState = (RestCallState) StoreDirectories.access$getDirectoriesMap$p(this.this$0.this$0).get(Long.valueOf(this.this$0.$channelId));
                     List list = restCallState != null ? (List) restCallState.invoke() : null;
                     if (list == null) {
                         list = n.emptyList();
@@ -63,7 +63,7 @@ public final class StoreDirectories$remo
                             arrayList.add(obj);
                         }
                     }
-                    map.put(valueOf, new Success(arrayList));
+                    access$getDirectoriesMap$p.put(valueOf, new Success(arrayList));
                     this.this$0.this$0.markChanged();
                 }
             });
