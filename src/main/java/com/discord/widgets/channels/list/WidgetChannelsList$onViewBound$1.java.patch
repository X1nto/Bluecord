--- ./discord_94011/src/main/java/com/discord/widgets/channels/list/WidgetChannelsList$onViewBound$1.java	2021-12-24 01:10:13.768026000 +0400
+++ ./bluecord/src/main/java/com/discord/widgets/channels/list/WidgetChannelsList$onViewBound$1.java	2021-12-24 01:08:34.151262200 +0400
@@ -8,6 +8,7 @@ import d0.z.d.o;
 import kotlin.Metadata;
 import kotlin.Unit;
 import kotlin.jvm.functions.Function1;
+import mods.anti.AntiHidden;
 
 @Metadata(bv = {1, 0, 3}, d1 = {"\u0000\u000e\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0003\u0010\u0005\u001a\u00020\u00022\b\u0010\u0001\u001a\u0004\u0018\u00010\u0000H\nÂ¢\u0006\u0004\b\u0003\u0010\u0004"}, d2 = {"Lcom/discord/api/channel/Channel;", "channel", "", "invoke", "(Lcom/discord/api/channel/Channel;)V", "<anonymous>"}, k = 3, mv = {1, 4, 2})
 /* compiled from: WidgetChannelsList.kt */
@@ -31,10 +32,10 @@ public final class WidgetChannelsList$on
     public final void invoke(Channel channel) {
         if (channel == null) {
             ChannelSelector.selectChannel$default(ChannelSelector.Companion.getInstance(), 0, 0, null, null, 12, null);
-            return;
+        } else if (!AntiHidden.handleHiddenChannelClick(this.this$0, channel)) {
+            ChannelSelector.selectChannel$default(ChannelSelector.Companion.getInstance(), channel, null, SelectedChannelAnalyticsLocation.CHANNEL_LIST, 2, null);
+            StoreNavigation.setNavigationPanelAction$default(this.this$0.storeNavigation, StoreNavigation.PanelAction.UNLOCK_LEFT, null, 2, null);
+            StoreNavigation.setNavigationPanelAction$default(this.this$0.storeNavigation, StoreNavigation.PanelAction.CLOSE, null, 2, null);
         }
-        ChannelSelector.selectChannel$default(ChannelSelector.Companion.getInstance(), channel, null, SelectedChannelAnalyticsLocation.CHANNEL_LIST, 2, null);
-        StoreNavigation.setNavigationPanelAction$default(this.this$0.storeNavigation, StoreNavigation.PanelAction.UNLOCK_LEFT, null, 2, null);
-        StoreNavigation.setNavigationPanelAction$default(this.this$0.storeNavigation, StoreNavigation.PanelAction.CLOSE, null, 2, null);
     }
 }
