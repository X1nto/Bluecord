--- ./discord_94011/src/main/java/com/discord/widgets/chat/input/WidgetChatInputEditText$setOnTextChangedListener$1.java	2021-12-24 01:10:13.947027800 +0400
+++ ./bluecord/src/main/java/com/discord/widgets/chat/input/WidgetChatInputEditText$setOnTextChangedListener$1.java	2021-12-24 01:08:34.356263300 +0400
@@ -8,6 +8,8 @@ import com.discord.utilities.view.text.T
 import d0.g0.w;
 import d0.z.d.m;
 import kotlin.Metadata;
+import mods.DiscordTools;
+import mods.activity.MediaTray;
 
 @Metadata(bv = {1, 0, 3}, d1 = {"\u0000\u001f\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0003*\u0001\u0000\b\n\u0018\u00002\u00020\u0001J\u0017\u0010\u0005\u001a\u00020\u00042\u0006\u0010\u0003\u001a\u00020\u0002H\u0016¢\u0006\u0004\b\u0005\u0010\u0006R\u0016\u0010\b\u001a\u00020\u00078\u0002@\u0002X\u000e¢\u0006\u0006\n\u0004\b\b\u0010\t¨\u0006\n"}, d2 = {"com/discord/widgets/chat/input/WidgetChatInputEditText$setOnTextChangedListener$1", "Lcom/discord/utilities/view/text/TextWatcher;", "Landroid/text/Editable;", "s", "", "afterTextChanged", "(Landroid/text/Editable;)V", "", "empty", "Z", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
 /* compiled from: WidgetChatInputEditText.kt */
@@ -25,6 +27,10 @@ public final class WidgetChatInputEditTe
     public void afterTextChanged(Editable editable) {
         m.checkNotNullParameter(editable, "s");
         super.afterTextChanged(editable);
+        MediaTray mediaTray = MediaTray.inst;
+        if (mediaTray != null) {
+            mediaTray.onTextChanged(editable);
+        }
         this.this$0.saveText();
         boolean isEmpty = TextUtils.isEmpty(editable);
         if (this.empty != isEmpty) {
@@ -34,7 +40,9 @@ public final class WidgetChatInputEditTe
         boolean startsWith$default = w.startsWith$default((CharSequence) editable.toString(), '/', false, 2, (Object) null);
         if (this.this$0.lastTypingEmissionMillis - ClockFactory.get().currentTimeMillis() < ((long) -10000) && !isEmpty && !startsWith$default) {
             this.this$0.lastTypingEmissionMillis = ClockFactory.get().currentTimeMillis();
-            StoreStream.Companion.getUsersTyping().setUserTyping(this.this$0.getChannelId());
+            if (!DiscordTools.disableTyping()) {
+                StoreStream.Companion.getUsersTyping().setUserTyping(this.this$0.getChannelId());
+            }
         }
     }
 }
