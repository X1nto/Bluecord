--- ./discord_94011/src/main/java/com/discord/utilities/systemlog/SystemLogCapture.java	2021-12-24 01:10:13.488028200 +0400
+++ ./bluecord/src/main/java/com/discord/utilities/systemlog/SystemLogCapture.java	2021-12-24 01:08:33.882262800 +0400
@@ -10,18 +10,13 @@ import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import kotlin.Metadata;
 import kotlin.jvm.internal.DefaultConstructorMarker;
 
-@Metadata(bv = {1, 0, 3}, d1 = {"\u00004\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\u0018\u0000 \u00152\u00020\u0001:\u0001\u0015B\u0007¢\u0006\u0004\b\u0014\u0010\u0004J\u000f\u0010\u0003\u001a\u00020\u0002H\u0002¢\u0006\u0004\b\u0003\u0010\u0004J\r\u0010\u0006\u001a\u00020\u0005¢\u0006\u0004\b\u0006\u0010\u0007J\r\u0010\t\u001a\u00020\b¢\u0006\u0004\b\t\u0010\nJ\u0019\u0010\u000e\u001a\u00020\u00022\n\u0010\r\u001a\u00060\u000bj\u0002`\f¢\u0006\u0004\b\u000e\u0010\u000fR\u0016\u0010\u0011\u001a\u00020\u00108\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b\u0011\u0010\u0012R\u0016\u0010\u0013\u001a\u00020\u00108\u0002@\u0002X\u0004¢\u0006\u0006\n\u0004\b\u0013\u0010\u0012¨\u0006\u0016"}, d2 = {"Lcom/discord/utilities/systemlog/SystemLogCapture;", "", "", "start", "()V", "Ljava/lang/Thread;", "startThread", "()Ljava/lang/Thread;", "", "getOutput", "()Ljava/lang/String;", "Ljava/lang/StringBuilder;", "Lkotlin/text/StringBuilder;", "sb", "appendOutput", "(Ljava/lang/StringBuilder;)V", "Lcom/discord/utilities/collections/FixedSizeLineBuffer;", "tombstoneBuffer", "Lcom/discord/utilities/collections/FixedSizeLineBuffer;", "buffer", "<init>", "Companion", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
-/* compiled from: SystemLogCapture.kt */
 public final class SystemLogCapture {
     public static final Companion Companion = new Companion(null);
     private final FixedSizeLineBuffer buffer = new FixedSizeLineBuffer(524288);
     private final FixedSizeLineBuffer tombstoneBuffer = new FixedSizeLineBuffer(102400);
 
-    @Metadata(bv = {1, 0, 3}, d1 = {"\u0000\u0016\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0006\b\u0003\u0018\u00002\u00020\u0001B\t\b\u0002¢\u0006\u0004\b\b\u0010\tJ\u0017\u0010\u0007\u001a\u00020\u00042\u0006\u0010\u0003\u001a\u00020\u0002H\u0000¢\u0006\u0004\b\u0005\u0010\u0006¨\u0006\n"}, d2 = {"Lcom/discord/utilities/systemlog/SystemLogCapture$Companion;", "", "", "line", "", "shouldIncludeLogLine$app_productionGoogleRelease", "(Ljava/lang/String;)Z", "shouldIncludeLogLine", "<init>", "()V", "app_productionGoogleRelease"}, k = 1, mv = {1, 4, 2})
-    /* compiled from: SystemLogCapture.kt */
     public static final class Companion {
         private Companion() {
         }
@@ -36,7 +31,6 @@ public final class SystemLogCapture {
         }
     }
 
-    /* access modifiers changed from: private */
     public final void start() {
         if (!new File("/system/bin/logcat").exists()) {
             this.buffer.addLine("Unable to locate '/system/bin/logcat'");
