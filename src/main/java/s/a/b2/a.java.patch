--- ./discord_94011/src/main/java/s/a/b2/a.java	2021-12-24 01:10:16.727027600 +0400
+++ ./bluecord/src/main/java/s/a/b2/a.java	2021-12-24 01:08:37.111262300 +0400
@@ -31,7 +31,7 @@ public final class a implements Executor
     public final long r;
 
     /* renamed from: s */
-    public final String f2970s;
+    public final String f2972s;
 
     /* renamed from: s.a.b2.a$a */
     public final class C0343a extends Thread {
@@ -148,7 +148,7 @@ public final class a implements Executor
 
         public final void d(int i2) {
             StringBuilder sb = new StringBuilder();
-            sb.append(a.this.f2970s);
+            sb.append(a.this.f2972s);
             sb.append("-worker-");
             sb.append(i2 == 0 ? "TERMINATED" : String.valueOf(i2));
             setName(sb.toString());
@@ -337,7 +337,7 @@ public final class a implements Executor
         this.p = i2;
         this.q = i3;
         this.r = j2;
-        this.f2970s = str;
+        this.f2972s = str;
         if (i2 >= 1) {
             if (i3 >= i2) {
                 if (i3 <= 2097150) {
@@ -513,7 +513,7 @@ public final class a implements Executor
                 z3 = this.m.a(hVar);
             }
             if (!z3) {
-                throw new RejectedExecutionException(c.d.b.a.a.H(new StringBuilder(), this.f2970s, " was terminated"));
+                throw new RejectedExecutionException(c.d.b.a.a.H(new StringBuilder(), this.f2972s, " was terminated"));
             }
         }
         if (!z2 || c2 == null) {
@@ -623,7 +623,7 @@ public final class a implements Executor
             }
         }
         long j2 = this.controlState;
-        return this.f2970s + '@' + c.q.a.k.a.v(this) + '[' + "Pool Size {" + "core = " + this.p + ", " + "max = " + this.q + "}, " + "Worker States {" + "CPU = " + i2 + ", " + "blocking = " + i3 + ", " + "parked = " + i4 + ", " + "dormant = " + i5 + ", " + "terminated = " + i6 + "}, " + "running workers queues = " + arrayList + ", " + "global CPU queue size = " + this.m.c() + ", " + "global blocking queue size = " + this.n.c() + ", " + "Control State {" + "created workers= " + ((int) (2097151 & j2)) + ", " + "blocking tasks = " + ((int) ((4398044413952L & j2) >> 21)) + ", " + "CPUs acquired = " + (this.p - ((int) ((9223367638808264704L & j2) >> 42))) + "}]";
+        return this.f2972s + '@' + c.q.a.k.a.v(this) + '[' + "Pool Size {" + "core = " + this.p + ", " + "max = " + this.q + "}, " + "Worker States {" + "CPU = " + i2 + ", " + "blocking = " + i3 + ", " + "parked = " + i4 + ", " + "dormant = " + i5 + ", " + "terminated = " + i6 + "}, " + "running workers queues = " + arrayList + ", " + "global CPU queue size = " + this.m.c() + ", " + "global blocking queue size = " + this.n.c() + ", " + "Control State {" + "created workers= " + ((int) (2097151 & j2)) + ", " + "blocking tasks = " + ((int) ((4398044413952L & j2) >> 21)) + ", " + "CPUs acquired = " + (this.p - ((int) ((9223367638808264704L & j2) >> 42))) + "}]";
     }
 
     public final boolean w() {
